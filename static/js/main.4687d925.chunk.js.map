{"version":3,"sources":["components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Container","children","className","s","container","Section","title","section","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","item","Notification","message","notification","App","state","leaveFeedback","setState","countPositiveFeedbackPercentage","totalFeedback","countTotalFeedback","Math","round","this","Object","keys","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oXAWeA,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCaxBI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEI,QAAtB,UACE,oBAAIL,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBL,M,gBCkBQO,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKR,UAAWC,IAAEM,QAAlB,SACGA,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEV,UAAWC,IAAEU,OACbC,KAAK,SAELC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAHIA,S,gBCmBAI,MA1Bf,YAMI,IAAD,IALDC,YAKC,MALM,EAKN,MAJDC,eAIC,MAJS,EAIT,MAHDC,WAGC,MAHK,EAGL,MAFDC,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,qBAAInB,UAAWC,IAAEmB,WAAjB,UACE,qBAAIpB,UAAWC,IAAEoB,KAAjB,mBAA8BN,KAC9B,qBAAIf,UAAWC,IAAEoB,KAAjB,sBAAiCL,KACjC,qBAAIhB,UAAWC,IAAEoB,KAAjB,kBAA6BJ,KAC7B,qBAAIjB,UAAWC,IAAEoB,KAAjB,oBAA+BH,KAC/B,qBAAIlB,UAAWC,IAAEoB,KAAjB,gCAA2CF,EAA3C,W,iBCLSG,MARf,YAAyD,IAAD,IAAhCC,eAAgC,MAAtB,mBAAsB,EACtD,OAAO,oBAAGvB,UAAWC,IAAEuB,aAAhB,cAAgCD,EAAhC,QCuDME,E,4MAlDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,cAAgB,SAAAjB,GACd,EAAKkB,SAAL,eAAiBlB,EAAS,EAAKgB,MAAMhB,GAAU,K,EAOjDmB,gCAAkC,WAAO,IAC/Bd,EAAS,EAAKW,MAAdX,KACFe,EAAgB,EAAKC,qBAC3B,OAAOC,KAAKC,MAAc,IAAPlB,EAAce,IAAkB,G,mEANnD,OAAOI,KAAKR,MAAMX,KAAOmB,KAAKR,MAAMV,QAAUkB,KAAKR,MAAMT,M,+BASjD,IAAD,EACwBiB,KAAKR,MAA5BX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS4B,OAAOC,KAAKF,KAAKR,OAC1BlB,gBAAiB0B,KAAKP,kBAI1B,cAAC,EAAD,CAASvB,MAAM,aAAf,SACG8B,KAAKH,qBACJ,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKH,qBACZZ,mBAAoBe,KAAKL,oCAG3B,cAAC,EAAD,CAAcN,QAAQ,oC,GA3ChBc,IAAMC,WCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4687d925.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.options}>\n      {options.map(option => (\n        <button\n          className={s.button}\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({\n  good = 0,\n  neutral = 0,\n  bad = 0,\n  total = 0,\n  positivePercentage = 0,\n}) {\n  return (\n    <ul className={s.statistics}>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral}</li>\n      <li className={s.item}>Bad: {bad}</li>\n      <li className={s.item}>Total: {total}</li>\n      <li className={s.item}>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message = 'Nothing to show.' }) {\n  return <p className={s.notification}> {message} </p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\n\nimport Container from './Container';\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Notification from './Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = option => {\n    this.setState({ [option]: this.state[option] + 1 });\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    return Math.round((good * 100) / totalFeedback) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback was given.\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}